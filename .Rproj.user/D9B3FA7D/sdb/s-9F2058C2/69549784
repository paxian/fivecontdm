{
    "contents" : "#install.packages('e1071')\nlibrary(e1071)\n\nmake_one_spell = function() {\n  rbinom(26,1,0.3)\n}\n\n#Generates a random dataset with n spells\nmake_n_random_spells = function( n ) {\n  r = c()\n  for( i in 1:n ) {\n    r = rbind(r, make_one_spell())\n  }\n  r\n}\n\n#Assign true class to given spell(s)\ntrue_spell_class = function( spell ) {\n  w = c(1,-2,3,-4,5,-6,7,-8,9,-10,11,-12,13,-14,15,\n        -16,17,-18,19,-20,21,-22,23,-24,25,-26)\n\n  sign(spell %*% w - 27.5)\n}\n\nsauron_test = function() {\n  #Sauron generates a dataset:\n  spells = make_n_random_spells(20)\n  c = true_spell_class(spells)\n  \n  #First student finds the majority class\n  majority_class = sign(sum(c) + 0.5)\n  \n  #Second student trains an SVM:\n  svm_model = svm(spells, c, type='C', kernel='linear')\n  \n  #Sauron generates a new example:\n  test_example = make_one_random_spell()\n  \n  #.. and tests each student's prediction:\n  student1_correct = (majority_class == true_spell_class(test_example))\n  student2_correct = (predict(svm_model, t(test_example)) == true_spell_class(test_example))\n  \n  c(student1_correct, student2_correct)\n}\n\n#Runs the Sauron test many times \nmany_sauron_tests = function( n ) {\n  r = c()\n  for( i in 1:n ) {\n    #Sometimes svm training fails for some weird reason. Just ignore these cases.\n    x = tryCatch(sauron_test(), error=function(err){ c(); })\n    r = rbind(r, x)\n  }\n  r\n}\n\nmain = function() {\n  results = many_sauron_tests(1000)\n  \n  #Analyze student's performance (expected generalization error):\n  print(\"First student:\")\n  print(table(results[,1]))\n  \n  print(\"Second student:\")\n  print(table(results[,2]))\n  \n  #These are the cases where student's predictions disagree:\n  disagreements = results[which(results[,1] != results[,2]),]\n  \n  #How often is the first student correct?\n  print(\"If students disagree, the first one will be correct with probability:\")\n  sum(disagreements[,1])/length(disagreements[,1])\n}\n\nmain()\n\n",
    "created" : 1439737764995.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3327396646",
    "id" : "69549784",
    "lastKnownWriteTime" : 1439743982,
    "path" : "~/MASTER/Specialization/DM/Resit/Provided_Code.R",
    "project_path" : "Provided_Code.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}